name: Deploy to Azure Container Apps

on: 
  workflow_dispatch:
  push:
      branches:
      - main
  pull_request:
      branches:
      - main

permissions:
      id-token: write
      contents: read

jobs:
  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    # checkout code
    - name: checkout branch
      uses: actions/checkout@v2

    # log into Azure with OIDC
    - name: OIDC Login to Azure Public Cloud 
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
        
 # authenticate into Docker
    - name: "docker login"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build and push Docker image
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.ACR_LOGIN_SERVER }}/demoapp:${{ github.sha }}

    # Scanning Images using Microsoft Defender
    - uses: Azure/container-scan@v0 
      name: Scan image for vulnerabilities
      id: container-scan
      continue-on-error: false
      with:
        image-name: ${{ secrets.ACR_LOGIN_SERVER }}/demoapp:${{ github.sha }} 

    # Sending logs to AppInsights
    - name: Post logs to appinsights
      uses: Azure/publish-security-assessments@v0
      with: 
        scan-results-path: ${{ steps.container-scan.outputs.scan-report-path }}
        connection-string: ${{ secrets.AZ_APPINSIGHTS_CONNECTION_STRING }}
        subscription-token: ${{ secrets.AZ_SUBSCRIPTION_TOKEN }}


